[package]
name = "solana_mev_bot"
version = "0.1.0"
edition = "2021"
authors = ["MEV Bot Team"]
description = "Production-hardened Solana MEV bot with advanced arbitrage strategies"
license = "MIT"
repository = "https://github.com/mev-bot/solana-mev-bot"
keywords = ["solana", "mev", "arbitrage", "defi", "trading"]
categories = ["blockchain", "trading"]

[dependencies]
# Core Solana dependencies
solana-sdk = "1.18"
solana-client = "1.18"
solana-transaction-status = "1.18"
solana-account-decoder = "1.18"
solana-program = "1.18"

# Anchor framework
anchor-lang = "0.29"
anchor-client = "0.29"

# Async runtime
tokio = { version = "1.35", features = ["full"] }
async-trait = "0.1"
futures-util = "0.3"

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
borsh = "0.10"
borsh-derive = "0.10"

# Logging and monitoring
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "chrono"] }
log = "0.4"

# Network and HTTP
reqwest = { version = "0.11", features = ["json", "stream"] }
hyper = { version = "1.0", features = ["full"] }

# Cryptography and security
# ed25519-dalek = "2.0"  # Conflicts with Solana SDK
sha2 = "0.10"
hmac = "0.12"

# Data structures and utilities
dashmap = "5.5"
indexmap = "2.0"
uuid = { version = "1.6", features = ["v4"] }

# Math and statistics
num-traits = "0.2"
rand = "0.8"
statrs = "0.16"

# Time and scheduling
chrono = { version = "0.4", features = ["serde"] }
backoff = { version = "0.4", features = ["tokio"] }

# Configuration and file watching
notify = "6.1"
toml = "0.8"

# System information
sys-info = "0.9"
num_cpus = "1.16"

# Zero-knowledge proofs (commented out due to dependency conflicts)
# ark-bn254 = "0.4"
# ark-groth16 = "0.4"
# ark-ff = "0.4"

# Machine learning (optional)
# tch = { version = "0.13", optional = true }
# rust-bert = { version = "0.20", optional = true }

# Database (optional)
# sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "postgres"], optional = true }

# WebSocket support
tokio-tungstenite = { version = "0.21", features = ["rustls-tls-webpki-roots"] }

# Compression
flate2 = "1.0"

# Memory management
# jemallocator = "0.5"

# Performance monitoring
# perf-event = "0.12"

# Network optimization
socket2 = "0.5"

# File system
fs2 = "0.1"

# Environment variables
dotenv = "0.15"

# CLI argument parsing
clap = { version = "4.4", features = ["derive"] }

# JSON-RPC
# jsonrpc-core = "18.0"
# jsonrpc-client-transports = "18.0"

# SPL Token
spl-token = "4.0"
spl-associated-token-account = "2.2"

# Pyth Oracle
pyth-sdk-solana = "0.10"

# Drift Protocol (using anchor-lang for now)
# drift = "0.8"

# Raydium (using spl-token for now)
# raydium-sdk = "0.1"

# Orca (using spl-token for now)
# orca-swap = "0.1"

# Jupiter (using spl-token for now)
# jupiter-core = "0.1"

# Serum (using spl-token for now)
# serum-dex = "0.1"

# Meteora (using spl-token for now)
# meteora-sdk = "0.1"

# Solend (using spl-token for now)
# solend-sdk = "0.1"

# Kamino (using spl-token for now)
# kamino-sdk = "0.1"

# Jito (using spl-token for now)
# jito-sdk = "0.1"

[dev-dependencies]
tokio-test = "0.4"
criterion = "0.5"
mockall = "0.12"

[features]
default = ["std"]
std = []
# full = ["tch", "rust-bert", "sqlx"]
# ml = ["tch", "rust-bert"]
# database = ["sqlx"]
# cuda = ["tch/cuda"]
# mkl = ["tch/mkl"]

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
strip = true

[profile.dev]
opt-level = 0
debug = true

[[bin]]
name = "solana_mev_bot"
path = "main.rs"

[lib]
name = "solana_mev_bot"
path = "lib.rs"

[workspace]
members = [
    "strategies/*",
    "core/*",
    "ai/*",
    "analytics/*",
    "execution/*",
    "monitoring/*",
    "network/*",
    "rpc/*",
    "risk/*",
    "flashloan_*/*",
    "zero_knowledge/*",
    "ultra_low_latency/*",
    "quantum_*/*",
    "alpha_*/*",
    "whale_intelligence/*",
    "portfolio/*",
    "execution_safety/*",
    "infrastructure/*",
    "institutional/*",
    "jito_economics/*",
    "intent_mesh/*",
    "governance_proposal_trader/*",
    "crisis_alpha_extractor/*",
    "systemic_risk_monetizer/*",
    "tensor_calculus_trading/*",
    "topology_exploitation/*",
    "stochastic_domination/*",
    "swap_optimization/*",
    "market_making/*",
    "mempool/*",
    "mempool_parsing/*",
    "orderbook_liquidity_detector/*",
    "gamma_squeeze_detector/*",
    "token_unlock_schedule_trader/*",
    "smart_contract_deployment_analyzer/*",
    "social_sentiment_alpha_extractor/*",
    "on_chain_momentum_detector/*",
    "micro_price_movement_predictor/*",
    "jump_diffusion_arbitrageur/*",
    "leverage_cascade_calculator/*",
    "fractional_position_optimizer/*",
    "execution_shortfall_minimizer/*",
    "bundle_collision_predictor/*",
    "capital_velocity_maximizer/*",
    "amm_exploitation/*",
    "amm_formula_exploiter/*",
    "dex_fee_tier_arbitrageur/*",
    "sub_penny_spread_capturer/*",
    "vol_of_vol_trader/*",
    "ornstein_uhlenbeck_mean_reverter/*",
    "packet_route_optimizer/*",
    "parallel_state_simulator/*",
    "probabilistic_state_tree/*",
    "speculative_execution_engine/*",
    "speed_of_light_calculator/*",
    "slot_prediction_engine/*",
    "slot_predictor/*",
    "merkle_proof_prefetcher/*",
    "transaction_simulation_cache/*",
    "performance/*",
    "system_optimization/*",
    "phoenix_clob_market_maker/*",
    "geographic_relay_optimizer/*",
    "gulf_stream_domination/*",
    "private_relay/*",
    "profit_extraction/*",
    "nanosecond_execution/*",
    "ml_feedback_loop/*",
    "tick_data_quantum_analyzer/*",
    "accounting/*",
    "adaptive_ai/*",
    "adaptive_order_sizer/*",
    "advanced_backtesting/*",
    "advanced_cryptography/*",
    "advanced_order_types/*",
    "bot_detection/*",
    "cryptanalysis_advantages/*",
    "crypto/*",
    "defi_protocol_flashloan_breaker/*",
    "dynamic_hotswap/*",
    "flashloan_ai_overlord/*",
    "flashloan_nuclear_arsenal/*",
    "flashloan_oracle_manipulation/*",
    "flashloan_timing_perfection/*",
    "wallet/*",
    "security/*",
    "utils/*",
]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[package.metadata.cargo-udeps.ignore]
normal = ["tch", "rust-bert", "sqlx"]

[package.metadata.cargo-udeps.ignore-names]
normal = ["criterion"]

[package.metadata.cargo-udeps.ignore-paths]
normal = ["tests/*", "examples/*", "benches/*"] 